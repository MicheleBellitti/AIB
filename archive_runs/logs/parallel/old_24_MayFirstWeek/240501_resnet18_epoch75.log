Starting feature extraction...
Starting feature extraction...
Starting feature extraction...
Starting feature extraction...
Predicting: |          | 0/? [00:00<?, ?it/s]Predicting:   0%|          | 0/25 [00:00<?, ?it/s]Predicting DataLoader 0:   0%|          | 0/25 [00:00<?, ?it/s]Predicting DataLoader 0:   4%|▍         | 1/25 [00:30<12:11,  0.03it/s]Predicting DataLoader 0:   8%|▊         | 2/25 [00:30<05:51,  0.07it/s]Predicting DataLoader 0:  12%|█▏        | 3/25 [00:30<03:47,  0.10it/s]Predicting DataLoader 0:  16%|█▌        | 4/25 [00:31<02:44,  0.13it/s]Predicting DataLoader 0:  20%|██        | 5/25 [00:31<02:07,  0.16it/s]Predicting DataLoader 0:  24%|██▍       | 6/25 [00:32<01:41,  0.19it/s]Predicting DataLoader 0:  28%|██▊       | 7/25 [00:32<01:23,  0.22it/s]Predicting DataLoader 0:  32%|███▏      | 8/25 [00:32<01:09,  0.24it/s]Predicting DataLoader 0:  36%|███▌      | 9/25 [00:33<00:59,  0.27it/s]Predicting DataLoader 0:  40%|████      | 10/25 [00:40<01:00,  0.25it/s]Predicting DataLoader 0:  44%|████▍     | 11/25 [00:42<00:53,  0.26it/s]Predicting DataLoader 0:  48%|████▊     | 12/25 [00:43<00:47,  0.27it/s]Predicting DataLoader 0:  52%|█████▏    | 13/25 [00:44<00:40,  0.30it/s]Predicting DataLoader 0:  56%|█████▌    | 14/25 [00:51<00:40,  0.27it/s]Predicting DataLoader 0:  60%|██████    | 15/25 [00:53<00:35,  0.28it/s]Predicting DataLoader 0:  64%|██████▍   | 16/25 [00:53<00:30,  0.30it/s]Predicting DataLoader 0:  68%|██████▊   | 17/25 [00:53<00:25,  0.32it/s]Predicting DataLoader 0:  72%|███████▏  | 18/25 [01:02<00:24,  0.29it/s]Predicting DataLoader 0:  76%|███████▌  | 19/25 [01:04<00:20,  0.29it/s]Predicting DataLoader 0:  80%|████████  | 20/25 [01:04<00:16,  0.31it/s]Predicting DataLoader 0:  84%|████████▍ | 21/25 [01:05<00:12,  0.32it/s]Predicting DataLoader 0:  88%|████████▊ | 22/25 [01:12<00:09,  0.30it/s]Predicting DataLoader 0:  92%|█████████▏| 23/25 [Features extracted.
Unique classes in cell_type_ids: tensor([0, 1, 2, 3])
Counts for each class: tensor([57, 27, 24, 20])
Starting logistic regression training...
01:14<00:06,  0.31it/s]Predicting DataLoader 0:  96%|█████████▌| 24/25 [01:14<00:03,  0.32it/s]Predicting DataLoader 0: 100%|██████████| 25/25 [01:14<00:00,  0.33it/s]Predicting DataLoader 0: 100%|██████████| 25/25 [01:14<00:00,  0.33it/s]
Features extracted.
Unique classes in cell_type_ids: tensor([0, 1, 2, 3])
Counts for each class: tensor([59, 29, 22, 18])
Starting logistic regression training...
Features extracted.
Unique classes in cell_type_ids: tensor([0, 1, 2, 3])
Counts for each class: tensor([55, 34, 30,  9])
Starting logistic regression training...
Features extracted.
Unique classes in cell_type_ids: tensor([0, 1, 2, 3])
Counts for each class: tensor([61, 24, 30, 13])
Starting logistic regression training...
RUNNING THE L-BFGS-B CODE

           * * *

RUNNING THE L-BFGS-B CODE

           * * *

Machine precision = 2.220D-16
 N =            8     M =           10
RUNNING THE L-BFGS-B CODE

           * * *

Machine precision = 2.220D-16
 N =            8     M =           10
Machine precision = 2.220D-16
 N =            8     M =           10

At X0         0 variables are exactly at the bounds
RUNNING THE L-BFGS-B CODE

           * * *

Machine precision = 2.220D-16
 N =            8     M =           10

At X0         0 variables are exactly at the bounds

At X0         0 variables are exactly at the bounds

At X0         0 variables are exactly at the bounds


At iterate    0    f=  1.38629D+00    |proj g|=  2.10938D-01
At iterate    0    f=  1.38629D+00    |proj g|=  3.02734D-01

At iterate    0    f=  1.38629D+00    |proj g|=  2.26562D-01

At iterate    0    f=  1.38629D+00    |proj g|=  1.95312D-01

           * * *

Tit   = total number of iterations
Tnf   = total number of function evaluations
Tnint = total number of segments explored during Cauchy searches
Skip  = number of BFGS updates skipped
Nact  = number of active bounds at final generalized Cauchy point
Projg = norm of the final projected gradient
F     = final function value

           * * *

   N    Tit     Tnf  Tnint  Skip  Nact     Projg        F
    8     16     18      1     0     0   5.153D-05   1.143D+00
  F =   1.1434723194476759     

CONVERGENCE: NORM_OF_PROJECTED_GRADIENT_<=_PGTOL            

           * * *

Tit   = total number of iterations
Tnf   = total number of function evaluations
Tnint = total number of segments explored during Cauchy searches
Skip  = number of BFGS updates skipped
Nact  = number of active bounds at final generalized Cauchy point
Projg = norm of the final projected gradient
F     = final function value

           * * *

   N    Tit     Tnf  Tnint  Skip  Nact     Projg        F
    8     17     22      1     0     0   1.474D-05   1.195D+00
  F =   1.1948745312942406     

CONVERGENCE: NORM_OF_PROJECTED_GRADIENT_<=_PGTOL            

           * * *

Tit   = total number of iterations
Tnf   = total number of function evaluations
Tnint = total number of segments explored during Cauchy searches
Skip  = number of BFGS updates skipped
Nact  = number of active bounds at final generalized Cauchy point
Projg = norm of the final projected gradient
F     = final function value

           * * *

   N    Tit     Tnf  Tnint  Skip  Nact     Projg        F
    8     17     20      1     0     0   1.622D-05   1.162D+00
  F =   1.1617596030759543     

CONVERGENCE: NORM_OF_PROJECTED_GRADIENT_<=_PGTOL            

           * * *

Tit   = total number of iterations
Tnf   = total number of function evaluations
Tnint = total number of segments explored during Cauchy searches
Skip  = number of BFGS updates skipped
Nact  = number of active bounds at final generalized Cauchy point
Projg = norm of the final projected gradient
F     = final function value

           * * *

   N    Tit     Tnf  Tnint  Skip  Nact     Projg        F
    8     21     25      1     0     0   9.308D-05   1.202D+00
  F =   1.2015472675877490     

CONVERGENCE: NORM_OF_PROJECTED_GRADIENT_<=_PGTOL            
Logistic regression model trained.
Evaluating classifier...
Classification Report:
              precision    recall  f1-score   support

           0       0.51      0.78      0.61        55
           1       0.33      0.41      0.36        34
           2       0.00      0.00      0.00        30
           3       0.00      0.00      0.00         9

    accuracy                           0.45       128
   macro avg       0.21      0.30      0.24       128
weighted avg       0.30      0.45      0.36       128

Top-3 Accuracy:
Top-3 Accuracy: 0.93
Top-1 Accuracy:
Top-1 Accuracy: 0.45
Generating confusion matrix plot...
Plot generated. Check the 'tmp.png' file.
Logistic regression model trained.
Evaluating classifier...
Classification Report:
              precision    recall  f1-score   support

           0       0.48      0.79      0.59        61
           1       0.22      0.25      0.24        24
           2       0.00      0.00      0.00        30
           3       0.00      0.00      0.00        13

    accuracy                           0.42       128
   macro avg       0.17      0.26      0.21       128
weighted avg       0.27      0.42      0.33       128

Top-3 Accuracy:
Top-3 Accuracy: 0.89
Top-1 Accuracy:
Top-1 Accuracy: 0.42
Generating confusion matrix plot...
Plot generated. Check the 'tmp.png' file.
Logistic regression model trained.
Evaluating classifier...
Classification Report:
              precision    recall  f1-score   support

           0       0.49      0.79      0.60        57
           1       0.31      0.41      0.35        27
           2       0.00      0.00      0.00        24
           3       0.00      0.00      0.00        20

    accuracy                           0.44       128
   macro avg       0.20      0.30      0.24       128
weighted avg       0.28      0.44      0.34       128

Top-3 Accuracy:
Top-3 Accuracy: 0.84
Top-1 Accuracy:
Top-1 Accuracy: 0.44
Generating confusion matrix plot...
Plot generated. Check the 'tmp.png' file.
Logistic regression model trained.
Evaluating classifier...
Classification Report:
              precision    recall  f1-score   support

           0       0.48      0.80      0.60        59
           1       0.26      0.28      0.27        29
           2       0.00      0.00      0.00        22
           3       0.00      0.00      0.00        18

    accuracy                           0.43       128
   macro avg       0.19      0.27      0.22       128
weighted avg       0.28      0.43      0.34       128

Top-3 Accuracy:
Top-3 Accuracy: 0.85
Top-1 Accuracy:
Top-1 Accuracy: 0.43
Generating confusion matrix plot...
Plot generated. Check the 'tmp.png' file.
